// Code generated by ros-gen-go.
// source: /opt/ros/jade/share/ros/../geometry_msgs/msg//Polygon.msg
// DO NOT EDIT!
package geometry_msgs

type _MsgPolygon struct {
	text   string
	name   string
	md5sum string
}

func (t *_MsgPolygon) Text() string {
	return t.text
}

func (t *_MsgPolygon) Name() string {
	return t.name
}

func (t *_MsgPolygon) MD5Sum() string {
	return t.md5sum
}

func (t *_MsgPolygon) NewMessage() ros.Message {
	m := new(Polygon)

	return m
}

var (
	MsgPolygon = &_MsgPolygon{
		`#A specification of a polygon where the first and last points are assumed to be connected
Point32[] points
`,
		"geometry_msgs/Polygon",
		"9d3aa06749458d74b06b6e2ab6c8104d",
	}
)

type Polygon struct {
	Points []Point32
}

func (m *Polygon) Type() ros.MessageType {
	return MsgPolygon
}

func (m *Polygon) Serialize(buf *bytes.Buffer) (err error) {
	// Points
	binary.Write(buf, binary.LittleEndian, uint32(len(m.Points)))
	for _, e := range m.Points {
		if err = e.Serialize(buf); err != nil {
			return err
		}
	}

	return
}

func (m *String) Deserialize(buf *bytes.Reader) (err error) {
	// Points
	var size uint32
	if err = binary.Read(buf, binary.LittleEndian, &size); err != nil {
		return err
	}
	m.Points = make([]Point32, int(size))
	for i := 0; i < int(size); i++ {
		if err = m.Points[i].Deserialize(buf); err != nil {
			return err
		}
	}

	return
}
