// Code generated by ros-gen-go.
// source: /opt/ros/jade/share/ros/../geometry_msgs/msg//Quaternion.msg
// DO NOT EDIT!
package geometry_msgs

type _MsgQuaternion struct {
	text   string
	name   string
	md5sum string
}

func (t *_MsgQuaternion) Text() string {
	return t.text
}

func (t *_MsgQuaternion) Name() string {
	return t.name
}

func (t *_MsgQuaternion) MD5Sum() string {
	return t.md5sum
}

func (t *_MsgQuaternion) NewMessage() ros.Message {
	m := new(Quaternion)

	return m
}

var (
	MsgQuaternion = &_MsgQuaternion{
		`# This represents an orientation in free space in quaternion form.

float64 x
float64 y
float64 z
float64 w
`,
		"geometry_msgs/Quaternion",
		"4c29a42d17cc0d0a6ead2e4413ed0e21",
	}
)

type Quaternion struct {
	X float64
	Y float64
	Z float64
	W float64
}

func (m *Quaternion) Type() ros.MessageType {
	return MsgQuaternion
}

func (m *Quaternion) Serialize(buf *bytes.Buffer) (err error) {
	// X
	binary.Write(buf, binary.LittleEndian, m.X)

	// Y
	binary.Write(buf, binary.LittleEndian, m.Y)

	// Z
	binary.Write(buf, binary.LittleEndian, m.Z)

	// W
	binary.Write(buf, binary.LittleEndian, m.W)

	return
}

func (m *String) Deserialize(buf *bytes.Reader) (err error) {
	// X
	if err = binary.Read(buf, binary.LittleEndian, &m.X); err != nil {
		return err
	}

	// Y
	if err = binary.Read(buf, binary.LittleEndian, &m.Y); err != nil {
		return err
	}

	// Z
	if err = binary.Read(buf, binary.LittleEndian, &m.Z); err != nil {
		return err
	}

	// W
	if err = binary.Read(buf, binary.LittleEndian, &m.W); err != nil {
		return err
	}

	return
}
