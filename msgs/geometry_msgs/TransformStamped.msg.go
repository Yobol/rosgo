// Code generated by ros-gen-go.
// source: /opt/ros/jade/share/ros/../geometry_msgs/msg//TransformStamped.msg
// DO NOT EDIT!
package geometry_msgs

type _MsgTransformStamped struct {
	text   string
	name   string
	md5sum string
}

func (t *_MsgTransformStamped) Text() string {
	return t.text
}

func (t *_MsgTransformStamped) Name() string {
	return t.name
}

func (t *_MsgTransformStamped) MD5Sum() string {
	return t.md5sum
}

func (t *_MsgTransformStamped) NewMessage() ros.Message {
	m := new(TransformStamped)

	return m
}

var (
	MsgTransformStamped = &_MsgTransformStamped{
		`# This expresses a transform from coordinate frame header.frame_id
# to the coordinate frame child_frame_id
#
# This message is mostly used by the 
# <a href="http://wiki.ros.org/tf">tf</a> package. 
# See its documentation for more information.

Header header
string child_frame_id # the frame id of the child frame
Transform transform
`,
		"geometry_msgs/TransformStamped",
		"c788bacd82271109656949f89891ee39",
	}
)

type TransformStamped struct {
	Header       Header
	ChildFrameID string
	Transform    Transform
}

func (m *TransformStamped) Type() ros.MessageType {
	return MsgTransformStamped
}

func (m *TransformStamped) Serialize(buf *bytes.Buffer) (err error) {
	// Header
	if err = m.Header.Serialize(buf); err != nil {
		return err
	}

	// ChildFrameID
	binary.Write(buf, binary.LittleEndian, uint32(len([]byte(m.ChildFrameID))))
	buf.Write([]byte(m.ChildFrameID))

	// Transform
	if err = m.Transform.Serialize(buf); err != nil {
		return err
	}

	return
}

func (m *String) Deserialize(buf *bytes.Reader) (err error) {
	// Header
	if err = m.Header.Deserialize(buf); err != nil {
		return err
	}

	// ChildFrameID
	var size uint32
	if err = binary.Read(buf, binary.LittleEndian, &size); err != nil {
		return err
	}
	data := make([]byte, int(size))
	if err = binary.Read(buf, binary.LittleEndian, data); err != nil {
		return err
	}
	m.ChildFrameID = string(data)

	// Transform
	if err = m.Transform.Deserialize(buf); err != nil {
		return err
	}

	return
}
