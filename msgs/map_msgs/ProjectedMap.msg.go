// Code generated by ros-gen-go.
// source: /opt/ros/jade/share/ros/../map_msgs/msg//ProjectedMap.msg
// DO NOT EDIT!
package map_msgs

type _MsgProjectedMap struct {
	text   string
	name   string
	md5sum string
}

func (t *_MsgProjectedMap) Text() string {
	return t.text
}

func (t *_MsgProjectedMap) Name() string {
	return t.name
}

func (t *_MsgProjectedMap) MD5Sum() string {
	return t.md5sum
}

func (t *_MsgProjectedMap) NewMessage() ros.Message {
	m := new(ProjectedMap)

	return m
}

var (
	MsgProjectedMap = &_MsgProjectedMap{
		`nav_msgs/OccupancyGrid map
float64 min_z
float64 max_z`,
		"map_msgs/ProjectedMap",
		"39cfd3d65f74c1179ef7f7258f002167",
	}
)

type ProjectedMap struct {
	Map  nav_msgs.OccupancyGrid
	MinZ float64
	MaxZ float64
}

func (m *ProjectedMap) Type() ros.MessageType {
	return MsgProjectedMap
}

func (m *ProjectedMap) Serialize(buf *bytes.Buffer) (err error) {
	// Map
	if err = m.Map.Serialize(buf); err != nil {
		return err
	}

	// MinZ
	binary.Write(buf, binary.LittleEndian, m.MinZ)

	// MaxZ
	binary.Write(buf, binary.LittleEndian, m.MaxZ)

	return
}

func (m *String) Deserialize(buf *bytes.Reader) (err error) {
	// Map
	if err = m.Map.Deserialize(buf); err != nil {
		return err
	}

	// MinZ
	if err = binary.Read(buf, binary.LittleEndian, &m.MinZ); err != nil {
		return err
	}

	// MaxZ
	if err = binary.Read(buf, binary.LittleEndian, &m.MaxZ); err != nil {
		return err
	}

	return
}
