// Code generated by ros-gen-go.
// source: /opt/ros/jade/share/ros/../nav_msgs/msg//Path.msg
// DO NOT EDIT!
package nav_msgs

type _MsgPath struct {
	text   string
	name   string
	md5sum string
}

func (t *_MsgPath) Text() string {
	return t.text
}

func (t *_MsgPath) Name() string {
	return t.name
}

func (t *_MsgPath) MD5Sum() string {
	return t.md5sum
}

func (t *_MsgPath) NewMessage() ros.Message {
	m := new(Path)

	return m
}

var (
	MsgPath = &_MsgPath{
		`#An array of poses that represents a Path for a robot to follow
Header header
geometry_msgs/PoseStamped[] poses
`,
		"nav_msgs/Path",
		"ec86ae50c777497b60186b87d59a8808",
	}
)

type Path struct {
	Header Header
	Poses  []geometry_msgs.PoseStamped
}

func (m *Path) Type() ros.MessageType {
	return MsgPath
}

func (m *Path) Serialize(buf *bytes.Buffer) (err error) {
	// Header
	if err = m.Header.Serialize(buf); err != nil {
		return err
	}

	// Poses
	binary.Write(buf, binary.LittleEndian, uint32(len(m.Poses)))
	for _, e := range m.Poses {
		if err = e.Serialize(buf); err != nil {
			return err
		}
	}

	return
}

func (m *String) Deserialize(buf *bytes.Reader) (err error) {
	// Header
	if err = m.Header.Deserialize(buf); err != nil {
		return err
	}

	// Poses
	var size uint32
	if err = binary.Read(buf, binary.LittleEndian, &size); err != nil {
		return err
	}
	m.Poses = make([]geometry_msgs.PoseStamped, int(size))
	for i := 0; i < int(size); i++ {
		if err = m.Poses[i].Deserialize(buf); err != nil {
			return err
		}
	}

	return
}
