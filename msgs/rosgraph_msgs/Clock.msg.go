// Code generated by ros-gen-go.
// source: /opt/ros/jade/share/ros/../rosgraph_msgs/msg//Clock.msg
// DO NOT EDIT!
package rosgraph_msgs

type _MsgClock struct {
	text   string
	name   string
	md5sum string
}

func (t *_MsgClock) Text() string {
	return t.text
}

func (t *_MsgClock) Name() string {
	return t.name
}

func (t *_MsgClock) MD5Sum() string {
	return t.md5sum
}

func (t *_MsgClock) NewMessage() ros.Message {
	m := new(Clock)

	return m
}

var (
	MsgClock = &_MsgClock{
		`# roslib/Clock is used for publishing simulated time in ROS. 
# This message simply communicates the current time.
# For more information, see http://www.ros.org/wiki/Clock
time clock
`,
		"rosgraph_msgs/Clock",
		"e6ecd4ab41c1032b93bdc409a310b211",
	}
)

type Clock struct {
	Clock ros.Time
}

func (m *Clock) Type() ros.MessageType {
	return MsgClock
}

func (m *Clock) Serialize(buf *bytes.Buffer) (err error) {
	// Clock
	binary.Write(buf, binary.LittleEndian, m.Clock.Sec)
	binary.Write(buf, binary.LittleEndian, m.Clock.NSec)

	return
}

func (m *String) Deserialize(buf *bytes.Reader) (err error) {
	// Clock
	if err = binary.Read(buf, binary.LittleEndian, &m.Clock.Sec); err != nil {
		return err
	}
	if err = binary.Read(buf, binary.LittleEndian, &m.Clock.NSec); err != nil {
		return err
	}

	return
}
