// Code generated by ros-gen-go.
// source: Temperature.msg
// DO NOT EDIT!
package sensor_msgs

import (
	"io"

	"github.com/ppg/rosgo/msgs/std_msgs"
	"github.com/ppg/rosgo/ros"
)

type _MsgTemperature struct {
	text   string
	name   string
	md5sum string
}

func (t *_MsgTemperature) Text() string {
	return t.text
}

func (t *_MsgTemperature) Name() string {
	return t.name
}

func (t *_MsgTemperature) MD5Sum() string {
	return t.md5sum
}

func (t *_MsgTemperature) NewMessage() ros.Message {
	m := new(Temperature)

	return m
}

var (
	MsgTemperature = &_MsgTemperature{
		` # Single temperature reading.

 Header header           # timestamp is the time the temperature was measured
                         # frame_id is the location of the temperature reading

 float64 temperature     # Measurement of the Temperature in Degrees Celsius

 float64 variance        # 0 is interpreted as variance unknown`,
		"sensor_msgs/Temperature",
		"6f4df500b16d1d3a368880d4a5f5d097",
	}
)

type Temperature struct {
	Header      std_msgs.Header
	Temperature float64
	Variance    float64
}

func (m *Temperature) Serialize(w io.Writer) (err error) {
	if err = ros.SerializeMessageField(w, "Header", &m.Header); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "float64", &m.Temperature); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "float64", &m.Variance); err != nil {
		return err
	}

	return
}

func (m *Temperature) Deserialize(r io.Reader) (err error) {
	// Header
	if err = ros.DeserializeMessageField(r, "Header", &m.Header); err != nil {
		return err
	}

	// Temperature
	if err = ros.DeserializeMessageField(r, "float64", &m.Temperature); err != nil {
		return err
	}

	// Variance
	if err = ros.DeserializeMessageField(r, "float64", &m.Variance); err != nil {
		return err
	}

	return
}
