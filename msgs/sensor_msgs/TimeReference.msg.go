// Code generated by ros-gen-go.
// source: TimeReference.msg
// DO NOT EDIT!
package sensor_msgs

import (
	"io"

	"github.com/ppg/rosgo/msgs/std_msgs"
	"github.com/ppg/rosgo/ros"
)

type _MsgTimeReference struct {
	text   string
	name   string
	md5sum string
}

func (t *_MsgTimeReference) Text() string {
	return t.text
}

func (t *_MsgTimeReference) Name() string {
	return t.name
}

func (t *_MsgTimeReference) MD5Sum() string {
	return t.md5sum
}

func (t *_MsgTimeReference) NewMessage() ros.Message {
	m := new(TimeReference)

	return m
}

var (
	MsgTimeReference = &_MsgTimeReference{
		`# Measurement from an external time source not actively synchronized with the system clock.

Header header    # stamp is system time for which measurement was valid
                 # frame_id is not used 

time   time_ref  # corresponding time from this external source
string source    # (optional) name of time source
`,
		"sensor_msgs/TimeReference",
		"ef08a08cc0648eb4e42fa2a172b1731a",
	}
)

type TimeReference struct {
	Header  std_msgs.Header
	TimeRef ros.Time
	Source  string
}

func (m *TimeReference) Serialize(w io.Writer) (err error) {
	if err = ros.SerializeMessageField(w, "Header", &m.Header); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "time", &m.TimeRef); err != nil {
		return err
	}

	if err = ros.SerializeMessageField(w, "string", &m.Source); err != nil {
		return err
	}

	return
}

func (m *TimeReference) Deserialize(r io.Reader) (err error) {
	// Header
	if err = ros.DeserializeMessageField(r, "Header", &m.Header); err != nil {
		return err
	}

	// TimeRef
	if err = ros.DeserializeMessageField(r, "time", &m.TimeRef); err != nil {
		return err
	}

	// Source
	if err = ros.DeserializeMessageField(r, "string", &m.Source); err != nil {
		return err
	}

	return
}
