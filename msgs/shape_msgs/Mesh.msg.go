// Code generated by ros-gen-go.
// source: /opt/ros/jade/share/ros/../shape_msgs/msg//Mesh.msg
// DO NOT EDIT!
package shape_msgs

type _MsgMesh struct {
	text   string
	name   string
	md5sum string
}

func (t *_MsgMesh) Text() string {
	return t.text
}

func (t *_MsgMesh) Name() string {
	return t.name
}

func (t *_MsgMesh) MD5Sum() string {
	return t.md5sum
}

func (t *_MsgMesh) NewMessage() ros.Message {
	m := new(Mesh)

	return m
}

var (
	MsgMesh = &_MsgMesh{
		`# Definition of a mesh

# list of triangles; the index values refer to positions in vertices[]
MeshTriangle[] triangles

# the actual vertices that make up the mesh
geometry_msgs/Point[] vertices
`,
		"shape_msgs/Mesh",
		"de320644698bf336f8f37512079d2586",
	}
)

type Mesh struct {
	Triangles []MeshTriangle
	Vertices  []geometry_msgs.Point
}

func (m *Mesh) Type() ros.MessageType {
	return MsgMesh
}

func (m *Mesh) Serialize(buf *bytes.Buffer) (err error) {
	// Triangles
	binary.Write(buf, binary.LittleEndian, uint32(len(m.Triangles)))
	for _, e := range m.Triangles {
		if err = e.Serialize(buf); err != nil {
			return err
		}
	}

	// Vertices
	binary.Write(buf, binary.LittleEndian, uint32(len(m.Vertices)))
	for _, e := range m.Vertices {
		if err = e.Serialize(buf); err != nil {
			return err
		}
	}

	return
}

func (m *String) Deserialize(buf *bytes.Reader) (err error) {
	// Triangles
	var size uint32
	if err = binary.Read(buf, binary.LittleEndian, &size); err != nil {
		return err
	}
	m.Triangles = make([]MeshTriangle, int(size))
	for i := 0; i < int(size); i++ {
		if err = m.Triangles[i].Deserialize(buf); err != nil {
			return err
		}
	}

	// Vertices
	var size uint32
	if err = binary.Read(buf, binary.LittleEndian, &size); err != nil {
		return err
	}
	m.Vertices = make([]geometry_msgs.Point, int(size))
	for i := 0; i < int(size); i++ {
		if err = m.Vertices[i].Deserialize(buf); err != nil {
			return err
		}
	}

	return
}
