// Code generated by ros-gen-go.
// source: /opt/ros/jade/share/ros/../std_msgs/msg//ColorRGBA.msg
// DO NOT EDIT!
package std_msgs

type _MsgColorRGBA struct {
	text   string
	name   string
	md5sum string
}

func (t *_MsgColorRGBA) Text() string {
	return t.text
}

func (t *_MsgColorRGBA) Name() string {
	return t.name
}

func (t *_MsgColorRGBA) MD5Sum() string {
	return t.md5sum
}

func (t *_MsgColorRGBA) NewMessage() ros.Message {
	m := new(ColorRGBA)

	return m
}

var (
	MsgColorRGBA = &_MsgColorRGBA{
		`float32 r
float32 g
float32 b
float32 a
`,
		"std_msgs/ColorRGBA",
		"631d37ed76123c8a0893f65a4f3b63b9",
	}
)

type ColorRGBA struct {
	R float32
	G float32
	B float32
	A float32
}

func (m *ColorRGBA) Type() ros.MessageType {
	return MsgColorRGBA
}

func (m *ColorRGBA) Serialize(buf *bytes.Buffer) (err error) {
	// R
	binary.Write(buf, binary.LittleEndian, m.R)

	// G
	binary.Write(buf, binary.LittleEndian, m.G)

	// B
	binary.Write(buf, binary.LittleEndian, m.B)

	// A
	binary.Write(buf, binary.LittleEndian, m.A)

	return
}

func (m *String) Deserialize(buf *bytes.Reader) (err error) {
	// R
	if err = binary.Read(buf, binary.LittleEndian, &m.R); err != nil {
		return err
	}

	// G
	if err = binary.Read(buf, binary.LittleEndian, &m.G); err != nil {
		return err
	}

	// B
	if err = binary.Read(buf, binary.LittleEndian, &m.B); err != nil {
		return err
	}

	// A
	if err = binary.Read(buf, binary.LittleEndian, &m.A); err != nil {
		return err
	}

	return
}
