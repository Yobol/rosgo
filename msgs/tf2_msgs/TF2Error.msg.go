// Code generated by ros-gen-go.
// source: /opt/ros/jade/share/ros/../tf2_msgs/msg//TF2Error.msg
// DO NOT EDIT!
package tf2_msgs

type _MsgTF2Error struct {
	text   string
	name   string
	md5sum string
}

func (t *_MsgTF2Error) Text() string {
	return t.text
}

func (t *_MsgTF2Error) Name() string {
	return t.name
}

func (t *_MsgTF2Error) MD5Sum() string {
	return t.md5sum
}

func (t *_MsgTF2Error) NewMessage() ros.Message {
	m := new(TF2Error)

	return m
}

var (
	MsgTF2Error = &_MsgTF2Error{
		`uint8 NO_ERROR = 0
uint8 LOOKUP_ERROR = 1
uint8 CONNECTIVITY_ERROR = 2
uint8 EXTRAPOLATION_ERROR = 3
uint8 INVALID_ARGUMENT_ERROR = 4
uint8 TIMEOUT_ERROR = 5
uint8 TRANSFORM_ERROR = 6

uint8 error
string error_string
`,
		"tf2_msgs/TF2Error",
		"4373ee33104a6a2611a3bce8d34370e7",
	}
)

type TF2Error struct {
	Error       uint8
	ErrorString string
}

func (m *TF2Error) Type() ros.MessageType {
	return MsgTF2Error
}

func (m *TF2Error) Serialize(buf *bytes.Buffer) (err error) {
	// Error
	binary.Write(buf, binary.LittleEndian, m.Error)

	// ErrorString
	binary.Write(buf, binary.LittleEndian, uint32(len([]byte(m.ErrorString))))
	buf.Write([]byte(m.ErrorString))

	return
}

func (m *String) Deserialize(buf *bytes.Reader) (err error) {
	// Error
	if err = binary.Read(buf, binary.LittleEndian, &m.Error); err != nil {
		return err
	}

	// ErrorString
	var size uint32
	if err = binary.Read(buf, binary.LittleEndian, &size); err != nil {
		return err
	}
	data := make([]byte, int(size))
	if err = binary.Read(buf, binary.LittleEndian, data); err != nil {
		return err
	}
	m.ErrorString = string(data)

	return
}
