// Code generated by ros-gen-go.
// source: /opt/ros/jade/share/ros/../visualization_msgs/msg//InteractiveMarkerPose.msg
// DO NOT EDIT!
package visualization_msgs

type _MsgInteractiveMarkerPose struct {
	text   string
	name   string
	md5sum string
}

func (t *_MsgInteractiveMarkerPose) Text() string {
	return t.text
}

func (t *_MsgInteractiveMarkerPose) Name() string {
	return t.name
}

func (t *_MsgInteractiveMarkerPose) MD5Sum() string {
	return t.md5sum
}

func (t *_MsgInteractiveMarkerPose) NewMessage() ros.Message {
	m := new(InteractiveMarkerPose)

	return m
}

var (
	MsgInteractiveMarkerPose = &_MsgInteractiveMarkerPose{
		`# Time/frame info.
Header header

# Initial pose. Also, defines the pivot point for rotations.
geometry_msgs/Pose pose

# Identifying string. Must be globally unique in
# the topic that this message is sent through.
string name
`,
		"visualization_msgs/InteractiveMarkerPose",
		"848ac869b9cb4c4d85af9cbd2ac09bcf",
	}
)

type InteractiveMarkerPose struct {
	Header Header
	Pose   geometry_msgs.Pose
	Name   string
}

func (m *InteractiveMarkerPose) Type() ros.MessageType {
	return MsgInteractiveMarkerPose
}

func (m *InteractiveMarkerPose) Serialize(buf *bytes.Buffer) (err error) {
	// Header
	if err = m.Header.Serialize(buf); err != nil {
		return err
	}

	// Pose
	if err = m.Pose.Serialize(buf); err != nil {
		return err
	}

	// Name
	binary.Write(buf, binary.LittleEndian, uint32(len([]byte(m.Name))))
	buf.Write([]byte(m.Name))

	return
}

func (m *String) Deserialize(buf *bytes.Reader) (err error) {
	// Header
	if err = m.Header.Deserialize(buf); err != nil {
		return err
	}

	// Pose
	if err = m.Pose.Deserialize(buf); err != nil {
		return err
	}

	// Name
	var size uint32
	if err = binary.Read(buf, binary.LittleEndian, &size); err != nil {
		return err
	}
	data := make([]byte, int(size))
	if err = binary.Read(buf, binary.LittleEndian, data); err != nil {
		return err
	}
	m.Name = string(data)

	return
}
