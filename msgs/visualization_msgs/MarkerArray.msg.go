// Code generated by ros-gen-go.
// source: /opt/ros/jade/share/ros/../visualization_msgs/msg//MarkerArray.msg
// DO NOT EDIT!
package visualization_msgs

type _MsgMarkerArray struct {
	text   string
	name   string
	md5sum string
}

func (t *_MsgMarkerArray) Text() string {
	return t.text
}

func (t *_MsgMarkerArray) Name() string {
	return t.name
}

func (t *_MsgMarkerArray) MD5Sum() string {
	return t.md5sum
}

func (t *_MsgMarkerArray) NewMessage() ros.Message {
	m := new(MarkerArray)

	return m
}

var (
	MsgMarkerArray = &_MsgMarkerArray{
		`Marker[] markers
`,
		"visualization_msgs/MarkerArray",
		"c1cbae8273e51c9b1c8fbc0d9c445d88",
	}
)

type MarkerArray struct {
	Markers []Marker
}

func (m *MarkerArray) Type() ros.MessageType {
	return MsgMarkerArray
}

func (m *MarkerArray) Serialize(buf *bytes.Buffer) (err error) {
	// Markers
	binary.Write(buf, binary.LittleEndian, uint32(len(m.Markers)))
	for _, e := range m.Markers {
		if err = e.Serialize(buf); err != nil {
			return err
		}
	}

	return
}

func (m *String) Deserialize(buf *bytes.Reader) (err error) {
	// Markers
	var size uint32
	if err = binary.Read(buf, binary.LittleEndian, &size); err != nil {
		return err
	}
	m.Markers = make([]Marker, int(size))
	for i := 0; i < int(size); i++ {
		if err = m.Markers[i].Deserialize(buf); err != nil {
			return err
		}
	}

	return
}
