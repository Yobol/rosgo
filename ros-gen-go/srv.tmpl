// Code generated by ros-gen-go.
// source: {{ .FileInfo.InFileBase }}
// DO NOT EDIT!
package {{ .FileInfo.PackageName }}

import (
	{{- if or .Spec.RequestSpec.HasSlice .Spec.RequestSpec.HasArray .Spec.ResponseSpec.HasSlice .Spec.ResponseSpec.HasArray }}
	"encoding/binary"
	"fmt"
	{{- end }}
	"io"

  {{ range .Spec.Packages }}
  "{{ . }}"
  {{- end }}
)

// Service type metadata
type _Srv{{ .Spec.Name }} struct {
  name    string
  md5sum  string
  text    string
  reqType ros.MessageType
  resType ros.MessageType
}

func (t *_Srv{{ .Spec.Name }}) Name() string { return t.name }
func (t *_Srv{{ .Spec.Name }}) MD5Sum() string { return t.md5sum }
func (t *_Srv{{ .Spec.Name }}) Text() string { return t.text }
func (t *_Srv{{ .Spec.Name }}) RequestType() ros.MessageType { return t.reqType }
func (t *_Srv{{ .Spec.Name }}) ResponseType() ros.MessageType { return t.resType }
func (t *_Srv{{ .Spec.Name }}) NewService() ros.Service {
    return new({{ .Spec.Name }})
}

var (
  Srv{{ .Spec.Name }} = &_Srv{{ .Spec.Name }} {
		"{{ .FileInfo.PackageName }}/{{ .Spec.Name }}",
    "{{ .FileInfo.MD5Sum }}",
    `{{ .FileInfo.Raw }}`,
    Msg{{ .Spec.Name }}Request,
    Msg{{ .Spec.Name }}Response,
  }
)

type {{ .Spec.Name }} struct {
    Request {{ .Spec.Name }}Request
    Response {{ .Spec.Name }}Response
}

func (s *{{ .Spec.Name }}) ReqMessage() ros.Message { return &s.Request }
func (s *{{ .Spec.Name }}) ResMessage() ros.Message { return &s.Response }

// {{ .Spec.Name }}Request

{{ template "msg.partial.tmpl" .Spec.RequestSpec }}

// {{ .Spec.Name }}Response

{{ template "msg.partial.tmpl" .Spec.ResponseSpec }}
